import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';
import { AnimatePresence, motion } from 'framer-motion';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';

import '../styles/globals.css';

const client = new ApolloClient({
  uri: 'https://countries.trevorblades.com',
  cache: new InMemoryCache(),
});

const animation = {
  variants: {
    initial: {
      opacity: 0,
      // translateY: '100vh',
      // scaleY: 0.4,
    },
    animate: {
      opacity: 1,
      // translateY: '0vh',
      // scaleY: 1,
    },
    exit: {
      opacity: 0,
      // translateY: '100vh',
      // scaleY: 0.4,
    },
  },
  transition: {
    duration: 0.7,
  },
};

export default function App({ Component, pageProps }: AppProps) {
  const router = useRouter();

  console.log(router);

  return (
    <ApolloProvider client={client}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ul className="lg:flex lg:gap-1 p-4 relative z-10">
        <Link href={`${router.basePath}/animations/drag-to-snap`}>
          <motion.li className="bg-slate-100 text-teal-800 py-4 px-8 mb-px hover:bg-slate-400 transition-colors">
            Drag to snap
          </motion.li>
        </Link>
        <Link href={`${router.basePath}/animations/pop-layout`}>
          <motion.li className="bg-slate-100 text-teal-800 py-4 px-8 mb-px hover:bg-slate-400 transition-colors">
            Layout 1
          </motion.li>
        </Link>
        <Link href={`${router.basePath}/animations/animated-list`}>
          <motion.li className="bg-slate-100 text-teal-800 py-4 px-8 hover:bg-slate-400 transition-colors">
            Layout 2
          </motion.li>
        </Link>
      </ul>
      <AnimatePresence mode="popLayout">
        <motion.div
          key={router.asPath}
          initial="initial"
          animate="animate"
          exit="exit"
          variants={animation.variants}
          transition={animation.transition}
        >
          <Component {...pageProps} />
        </motion.div>
      </AnimatePresence>
    </ApolloProvider>
  );
}
